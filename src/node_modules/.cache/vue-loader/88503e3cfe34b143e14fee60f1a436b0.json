{"remainingRequest":"/Users/jakanddaxter/Documents/Vue-Applications/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jakanddaxter/Documents/Vue-Applications/src/components/Form2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jakanddaxter/Documents/Vue-Applications/src/components/Form2.vue","mtime":1557262084000},{"path":"/Users/jakanddaxter/Documents/Vue-Applications/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jakanddaxter/Documents/Vue-Applications/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jakanddaxter/Documents/Vue-Applications/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jakanddaxter/Documents/Vue-Applications/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapFields } from 'vuex-map-fields';\n\nconst Status = {\n  NOT_SUBMITTED: 'NOT_SUBMITTED',\n  SUCCESS: 'SUCCESS',\n  ERROR: 'ERROR',\n};\n\nexport default {\n  data() {\n    return {\n      roles: [\n        'Dev',\n        'Manager',\n        'Student',\n      ],\n      submitStatus: Status.NOT_SUBMITTED,\n      errors: {},\n    };\n  },\n\n  computed: {\n    ...mapFields([\n      'form.role',\n      'form.joinDate',\n      'form.isLocatedInVic',\n      'form.locationInVic',\n    ]),\n  },\n\n  created() {\n    // make the constants available to the template\n    this.Status = Status;\n  },\n\n  methods: {\n    back() {\n      this.$router.go(-1);\n    },\n\n    submit() {\n      if (this.validateForm()){\n        fetch(process.env.VUE_APP_SUBMIT_FORM_URL, {\n          method: 'POST',\n          mode: 'no-cors', // opage request to bypass CORS restriction by browser\n          headers: {\n            'Content-Type': 'application/json; charset=utf-8',\n          },\n          body: JSON.stringify(this.$store.state.form),\n        }).then(() => {\n          this.submitStatus = Status.SUCCESS;\n        }).catch(() => {\n          this.submitStatus = Status.ERROR;\n        });\n      }\n    },\n\n    validateForm() {\n      this.errors = [];\n\n      if (!this.joinDate) {\n        this.errors['joinDate'] = 'Joining date is required';\n      }\n\n      if (this.isLocatedInVic === null) {\n        this.errors['isLocatedInVic'] = 'You must select your location';\n      }\n\n      if (this.isLocatedInVic && !this.locationInVic) {\n        this.errors['locationInVic'] = 'Please specify where in Victoria';\n      }\n\n      return Object.keys(this.errors).length === 0;\n    },\n  },\n}\n",{"version":3,"sources":["Form2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Form2.vue","sourceRoot":"components","sourcesContent":["<template>\n  <div class=\"ui centered card\">\n    <div class=\"content\">\n      <div class=\"ui form\">\n        <h2 class=\"ui dividing header\">Page 2</h2>\n\n        <!-- user role -->\n        <div class=\"field\">\n          <label>What is the user role?</label>\n          <select class=\"ui fluid dropdown\" v-model=\"role\">\n            <option\n              v-for=\"(role, index) in roles\"\n              :key=\"index\"\n              :value=\"role\"\n            >\n              {{ role }}\n            </option>\n          </select>\n        </div>\n\n        <!-- first joining date -->\n        <div class=\"field\">\n          <label>When did the user first join?</label>\n          <!-- TODO: date input control is not supported in IE and Safari, will fallback to text -->\n          <input type=\"date\" v-model=\"joinDate\">\n          <div class=\"ui pointing red basic label\" v-show=\"errors['joinDate']\">\n            {{ errors['joinDate'] }}\n          </div>\n        </div>\n\n        <!-- is user located in Victoria -->\n        <div class=\"inline fields\">\n          <label>Is this person located in Victoria?</label>\n          <div class=\"field\">\n            <div class=\"ui radio checkbox\">\n              <input\n                type=\"radio\"\n                :value=\"true\"\n                v-model=\"isLocatedInVic\">\n              <label>Yes</label>\n            </div>\n          </div>\n          <div class=\"field\">\n            <div class=\"ui radio checkbox\">\n              <input\n                type=\"radio\"\n                :value=\"false\"\n                v-model=\"isLocatedInVic\">\n              <label>No</label>\n            </div>\n          </div>\n          <div class=\"ui pointing red basic label\" v-show=\"errors['isLocatedInVic']\">\n            {{ errors['isLocatedInVic'] }}\n          </div>\n        </div>\n\n        <!-- where in Victoria -->\n        <div class=\"field\" v-show=\"isLocatedInVic\">\n          <label>Where in Victoria?</label>\n          <input type=\"text\" v-model=\"locationInVic\">\n          <div class=\"ui pointing red basic label\" v-show=\"errors['locationInVic']\">\n            {{ errors['locationInVic'] }}\n          </div>\n        </div>\n\n        <!-- control buttons -->\n        <div class=\"ui buttons\">\n          <button class=\"ui button\" @click=\"back\">\n            Back\n          </button>\n          <button class=\"ui primary button\" @click=\"submit\">\n            Submit\n          </button>\n        </div>\n      </div>\n\n      <!-- submission status message -->\n      <div class=\"ui basic green message\" v-show=\"submitStatus === Status.SUCCESS\">\n        Form was successfully submitted\n      </div>\n      <div class=\"ui basic red message\" v-show=\"submitStatus === Status.ERROR\">\n        There was error while submitting the form\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapFields } from 'vuex-map-fields';\n\nconst Status = {\n  NOT_SUBMITTED: 'NOT_SUBMITTED',\n  SUCCESS: 'SUCCESS',\n  ERROR: 'ERROR',\n};\n\nexport default {\n  data() {\n    return {\n      roles: [\n        'Dev',\n        'Manager',\n        'Student',\n      ],\n      submitStatus: Status.NOT_SUBMITTED,\n      errors: {},\n    };\n  },\n\n  computed: {\n    ...mapFields([\n      'form.role',\n      'form.joinDate',\n      'form.isLocatedInVic',\n      'form.locationInVic',\n    ]),\n  },\n\n  created() {\n    // make the constants available to the template\n    this.Status = Status;\n  },\n\n  methods: {\n    back() {\n      this.$router.go(-1);\n    },\n\n    submit() {\n      if (this.validateForm()){\n        fetch(process.env.VUE_APP_SUBMIT_FORM_URL, {\n          method: 'POST',\n          mode: 'no-cors', // opage request to bypass CORS restriction by browser\n          headers: {\n            'Content-Type': 'application/json; charset=utf-8',\n          },\n          body: JSON.stringify(this.$store.state.form),\n        }).then(() => {\n          this.submitStatus = Status.SUCCESS;\n        }).catch(() => {\n          this.submitStatus = Status.ERROR;\n        });\n      }\n    },\n\n    validateForm() {\n      this.errors = [];\n\n      if (!this.joinDate) {\n        this.errors['joinDate'] = 'Joining date is required';\n      }\n\n      if (this.isLocatedInVic === null) {\n        this.errors['isLocatedInVic'] = 'You must select your location';\n      }\n\n      if (this.isLocatedInVic && !this.locationInVic) {\n        this.errors['locationInVic'] = 'Please specify where in Victoria';\n      }\n\n      return Object.keys(this.errors).length === 0;\n    },\n  },\n}\n</script>\n"]}]}